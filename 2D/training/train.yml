general:
    name_case: 'Unet_ks3_rf50.pth'
    data_dir: 'dataset/generated/random.npy' 


globals:                                    # Domain sizes and others, used to compute global attributes
    nnx: 101                                # Number of points in x direction
    nny: 101                                # Number of points in y direction
    xmin: 0.0
    ymin: 0.0
    xmax: 5.0
    ymax: 5.0
    interface_center:
        x: 2.5
        y: 2.5
    interface_radius: 1.5
    epsilon_inside: 1.0
    epsilon_outside: 80.0

arch:
    model: "UNet"
    scales:
        scale_0: [[1, 30, 35], [65, 22, 1]]
        scale_1: [[35, 40], [70, 30]]
        scale_2: [[40, 40], [80, 30]]
        scale_3: [40, 40]
    kernel_sizes: 3

data_loader:
    batch_size: 64


loss:
    args:
        bound_weight: 8.0e+5                  # Weighting of the loss on the boundaries (float)
        lapl_weight: 8.0e+3
        interface_weight: 3.0e+3                # Weighting of the loss on the Laplacian (float)
        optimizer_lr: 3.e-4   

trainer:
    epochs: 100                            # Number of epochs









#####################   Architectures   ##############################


# Unet_ks3_rf50:
#     UNet3:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 20, 20, 30], [60, 20, 20, 1]]
#                 scale_1: [[30, 30, 30, 30], [70, 30, 30]]
#                 scale_2: [30, 40, 40]
#             kernel_sizes: 3

#     UNet4:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 30, 35], [65, 22, 1]]
#                 scale_1: [[35, 40], [70, 30]]
#                 scale_2: [[40, 40], [80, 30]]
#                 scale_3: [40, 40]
#             kernel_sizes: 3


# Unet_ks3_rf100:
#     UNet3:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 20, 20, 20, 20, 20], [44, 20, 20, 20, 20, 1]]
#                 scale_1: [[20, 20, 20, 20, 20, 20], [44, 20, 20, 20, 20, 24]]
#                 scale_2: [20, 24, 24, 24, 24, 24]
#             kernel_sizes: 3

#     UNet4:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 22, 22, 22], [44, 22, 22, 1]]
#                 scale_1: [[22, 22, 22, 22], [44, 22, 22, 22]]
#                 scale_2: [[22, 36, 22], [44, 36, 22]]
#                 scale_3: [22, 40, 22]
#             kernel_sizes: 3

#     UNet5:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 32], [64, 1]]
#                 scale_1: [[32, 22, 32], [64, 22, 32]]
#                 scale_2: [[32, 32], [64, 32]]
#                 scale_3: [[32, 32], [74, 32]]
#                 scale_4: [32, 42]
#             kernel_sizes: 3



# Unet_ks3_rf150:
#     UNet3:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 15, 15, 15, 15, 15, 20], [44, 15, 15, 15, 15, 15, 1]]
#                 scale_1: [[20, 20, 20, 20, 20, 20, 20], [44, 20, 20, 20, 20, 20, 24]]
#                 scale_2: [20, 20, 20, 20, 20, 20, 20, 20, 20, 24]
#             kernel_sizes: 3

#     UNet4:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 22, 22, 22], [44, 22, 22, 1]]
#                 scale_1: [[22, 20, 20, 15, 22], [44, 20, 20, 15, 22]]
#                 scale_2: [[22, 20, 20, 20, 22], [44, 20, 20, 22]]
#                 scale_3: [22, 30, 30, 22]
#             kernel_sizes: 3

#     UNet5:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 32], [64, 1]]
#                 scale_1: [[32, 22, 32], [64, 22, 32]]
#                 scale_2: [[32, 20, 32], [64, 20, 32]]
#                 scale_3: [[32, 32], [74, 32]]
#                 scale_4: [32, 20, 42]
#             kernel_sizes: 3



# Unet_ks3_rf200:
#     UNet3:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 14, 14, 14, 14, 14, 14, 14, 14, 14, 12], [24, 14, 14, 14, 14, 14, 14, 14, 14, 14, 1]]
#                 scale_1: [[12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 12], [24, 14, 14, 14, 14, 14, 14, 14, 14, 14, 12]]
#                 scale_2: [12, 16, 16, 16, 16, 16, 16, 16, 16, 16, 12]
#             kernel_sizes: 3

#     UNet4:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 20, 20, 20, 16], [32, 20, 20, 20, 1]]
#                 scale_1: [[16, 16, 16, 16, 16, 16], [32, 16, 16, 16, 16, 16]]
#                 scale_2: [[16, 16, 16, 16, 16], [32, 16, 16, 16, 16]]
#                 scale_3: [16, 24, 24, 24, 24, 16]
#             kernel_sizes: 3

#     UNet5:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 30, 20], [40, 30, 1]]
#                 scale_1: [[20, 20, 20], [40, 20, 20]]
#                 scale_2: [[20, 16, 16, 20], [40, 16, 16, 20]]
#                 scale_3: [[20, 20, 20], [40, 20, 20]]
#                 scale_4: [20, 60, 20]
#             kernel_sizes: 3

#     UNet6:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 30, 20], [40, 30, 1]]
#                 scale_1: [[20, 20, 20], [40, 20, 20]]
#                 scale_2: [[20, 20], [40, 20]]
#                 scale_3: [[20, 30], [60, 20]]
#                 scale_4: [[30, 30], [60, 30]]
#                 scale_5: [30, 30]
#             kernel_sizes: 3



# Unet_ks3_rf300:
#     UNet3:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12], 
#                                 [24, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1]]
#                 scale_1: [[12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], 
#                                 [24, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]]
#                 scale_2: [12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 12]
#             kernel_sizes: 3

#     UNet4:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 20, 20, 20, 14], [28, 20, 20, 20, 1]]
#                 scale_1: [[14, 14, 14, 14, 14, 14, 14, 14, 14], [28, 14, 14, 14, 14, 14, 14, 14, 14]]
#                 scale_2: [[14, 14, 14, 14, 14, 14, 14, 14], [28, 14, 14, 14, 14, 14, 14, 14]]
#                 scale_3: [14, 18, 18, 18, 18, 18, 18, 14]
#             kernel_sizes: 3

#     UNet5:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 30, 20], [40, 30, 1]]
#                 scale_1: [[20, 20, 20], [40, 20, 20]]
#                 scale_2: [[20, 16, 16, 20], [40, 16, 16, 20]]
#                 scale_3: [[20, 20, 20, 20, 20], [40, 20, 20, 20, 20]]
#                 scale_4: [20, 30, 30, 20]
#             kernel_sizes: 3

#     UNet6:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 30, 20], [40, 30, 1]]
#                 scale_1: [[20, 20, 20], [40, 20, 20]]
#                 scale_2: [[20, 20], [40, 20]]
#                 scale_3: [[20, 20, 20], [50, 20, 20]]
#                 scale_4: [[20, 30], [60, 30]]
#                 scale_5: [30, 30, 30]
#             kernel_sizes: 3




#     Unet_ks3_rf400
#     UNet3:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], 
#                                 [22, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1]]
#                 scale_1: [[11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], 
#                                 [22, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11]]
#                 scale_2: [11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 
#                                 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11]
#             kernel_sizes: 3

#     UNet4:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 20, 20, 20, 12], [24, 20, 20, 20, 1]]
#                 scale_1: [[12, 12, 12, 12, 12, 12, 12, 12, 12], [24, 12, 12, 12, 12, 12, 12, 12, 12]]
#                 scale_2: [[12, 12, 12, 12, 12, 12, 12, 12], [24, 12, 12, 12, 12, 12, 12, 12]]
#                 scale_3: [12, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 12]
#             kernel_sizes: 3

#     UNet5:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 30, 20], [40, 30, 1]]
#                 scale_1: [[20, 20, 20], [40, 20, 20]]
#                 scale_2: [[20, 16, 16, 20], [40, 16, 16, 20]]
#                 scale_3: [[20, 15, 15, 15, 15, 20], [40, 15, 15, 15, 15, 20]]
#                 scale_4: [20, 20, 20, 20, 20, 20]
#             kernel_sizes: 3

#     UNet6:
#         type: 'UNet'
#         args:
#             scales:
#                 scale_0: [[1, 30, 20], [40, 30, 1]]
#                 scale_1: [[20, 20, 20], [40, 20, 20]]
#                 scale_2: [[20, 20], [40, 20]]
#                 scale_3: [[20, 20, 20], [40, 20, 20]]
#                 scale_4: [[20, 20, 20], [40, 20]]
#                 scale_5: [20, 30, 30, 20]
#             kernel_sizes: 3


# MSNet_ks3_rf50:
#     MSNet3:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 58, 58, 1]
#                 scale_1: [2, 58, 58, 1]
#                 scale_2: [1, 40, 40, 40, 1]
#             kernel_sizes: 3

#     MSNet4:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 824, 1]
#                 scale_1: [2, 824, 1]
#                 scale_2: [2, 824, 1]
#                 scale_3: [1, 1424, 1]
#             kernel_sizes: 3




# MSNet_ks3_rf100:
#     MSNet3:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 24, 24, 24, 24, 24, 24, 24, 1]
#                 scale_1: [2, 26, 26, 26, 26, 26, 26, 1]
#                 scale_2: [1, 26, 26, 26, 26, 26, 26, 1]
#             kernel_sizes: 3

#     MSNet4:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 50, 50, 1]
#                 scale_1: [2, 34, 34, 34, 1]
#                 scale_2: [2, 34, 34, 34, 1]
#                 scale_3: [1, 50, 50, 1]
#             kernel_sizes: 3

#     MSNet5:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 700, 1]
#                 scale_1: [2, 700, 1]
#                 scale_2: [2, 700, 1]
#                 scale_3: [2, 700, 1]
#                 scale_4: [1, 960, 1]
#             kernel_sizes: 3



# MSNet_ks3_rf150:
#     MSNet3:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1]
#                 scale_1: [2, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1]
#                 scale_2: [1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1]
#             kernel_sizes: 3

#     MSNet4:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 30, 30, 30, 30, 1]
#                 scale_1: [2, 30, 30, 30, 30, 1]
#                 scale_2: [2, 30, 30, 30, 30, 1]
#                 scale_3: [1, 30, 30, 30, 30, 1]
#             kernel_sizes: 3

#     MSNet5:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 50, 50, 1]
#                 scale_1: [2, 700, 1]
#                 scale_2: [2, 50, 50, 1]
#                 scale_3: [2, 50, 50, 1]
#                 scale_4: [1, 700, 1]
#             kernel_sizes: 3



# MSNet_ks3_rf200:
#     MSNet3:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 1]
#                 scale_1: [2, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 1]
#                 scale_2: [1, 16, 18, 18, 18, 18, 18, 18, 18, 18, 18, 16, 16, 16, 1]
#             kernel_sizes: 3

#     MSNet4:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 24, 24, 24, 24, 24, 1]
#                 scale_1: [2, 22, 22, 24, 22, 22, 22, 1]
#                 scale_2: [2, 24, 24, 24, 24, 24, 1]
#                 scale_3: [1, 22, 24, 24, 24, 24, 22, 1]
#             kernel_sizes: 3

#     MSNet5:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 30, 30, 30, 1]
#                 scale_1: [2, 30, 30, 30, 1]
#                 scale_2: [2, 30, 30, 30, 1]
#                 scale_3: [2, 50, 50, 1]
#                 scale_4: [1, 50, 50, 1]
#             kernel_sizes: 3


# MSNet_ks5_rf100:
#     MSNet3:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 34, 34, 1]
#                 scale_1: [2, 34, 34, 1]
#                 scale_2: [1, 26, 26, 26, 1]
#             kernel_sizes: 5

#     MSNet4:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 340, 1]
#                 scale_1: [2, 340, 1]
#                 scale_2: [2, 340, 1]
#                 scale_3: [1, 460, 1]
#             kernel_sizes: 5



# MSNet_ks5_rf150:
#     MSNet3:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 18, 18, 18, 18, 18, 1]
#                 scale_1: [2, 18, 18, 18, 18, 18, 1]
#                 scale_2: [1, 20, 20, 20, 20, 1]
#             kernel_sizes: 5

#     MSNet4:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 310, 1]
#                 scale_1: [2, 310, 1]
#                 scale_2: [2, 310, 1]
#                 scale_3: [1, 32, 32, 1]
#             kernel_sizes: 5



# MSNet_ks5_rf200:
#     MSNet3:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 14, 14, 14, 14, 14, 14, 14, 1]
#                 scale_1: [2, 16, 16, 16, 16, 16, 16, 1]
#                 scale_2: [1, 16, 16, 16, 16, 16, 16, 1]
#             kernel_sizes: 5

#     MSNet4:
#         type: 'MSNet'
#         args:
#             scales:
#                 scale_0: [2, 30, 30, 1]
#                 scale_1: [2, 22, 22, 22, 1]
#                 scale_2: [2, 22, 22, 22, 1]
#                 scale_3: [1, 30, 30, 1]
#             kernel_sizes: 5
