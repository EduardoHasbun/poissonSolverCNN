########################################################################################################################
#                                                                                                                      #
#                                            cfdsolver -- Configuration file                                           #
#                                                                                                                      #
#                                           Lionel Cheng, CERFACS, 05.11.2020                                          #
#                                                                                                                      #
########################################################################################################################

# Contains the parameters for the model (training, etc.)

# To import the parameters, use
#     import yaml
#     with open('config.yml', 'r') as yaml_stream:
#         config = yaml.safe_load(yaml_stream)

casename: 'runs\network\'

params:
  geom: 'xy'

init:
  n_back: 1.0e+16
  n_pert: 1.0e+11
  func: 'gaussians'
  # args : [1.0e+2, 0.4e-2, 0.6e-2, 1.0e-3, 1.0e-3,
  #              1.0e+11, 0.6e-2, 0.4e-2, 1.0e-3, 1.0e-3,
  #              1.0e+11, 0.6e-2, 0.6e-2, 1.0e-3, 1.0e-3,
  #              1.0e+11, 0.4e-2, 0.4e-2, 1.0e-3, 1.0e-3]
  args : [1.8e+3, 0.5e-2, 0.5e-2, 0.5e-2, 1.0e-3, 1.0e-3, 1.0e-3] 

poisson:
  type: 'network'
  mat: 'cart_dirichlet'
  nmax_fourier: 10
  bcs: 'dirichlet'

mesh:
  xmin: 0
  ymin: 0
  zmin: 0
  xmax: 1.0e-2
  ymax: 1.0e-2
  zmax: 1.0e-2
  nnx: 40
  nny: 40
  nnz: 40

BC: 'full_out'

output:
  save: 'plasma_period'
  verbose: True
  period: 0.1
  files: 'fig'
  dl_save: 'no'
  globals:
    fig: [1.0, 1.5]
    vars: 'yes'

# This block is useful only if poisson/type = 'network'
network:
  n_gpu: 1                                    # Number of GPUs to use



arch: 
    type: UNet
    scales:
        scale_0: [[1, 30, 20], [40, 30, 1]]
        scale_1: [[20, 20, 20], [40, 20, 20]]
        scale_2: [[20, 16, 16, 20], [40, 16, 16, 20]]
        scale_3: [[20, 20, 20], [40, 20, 20]]
        scale_4: [20, 60, 20]
    kernel_sizes: 3